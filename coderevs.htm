<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:8.0pt;
	margin-left:0cm;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
a:link, span.MsoHyperlink
	{color:#0563C1;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:#954F72;
	text-decoration:underline;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:8.0pt;
	margin-left:36.0pt;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:36.0pt;
	margin-bottom:.0001pt;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:36.0pt;
	margin-bottom:.0001pt;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:8.0pt;
	margin-left:36.0pt;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;}
.MsoChpDefault
	{font-family:"Calibri",sans-serif;}
.MsoPapDefault
	{margin-bottom:8.0pt;
	line-height:107%;}
@page WordSection1
	{size:595.3pt 841.9pt;
	margin:72.0pt 72.0pt 72.0pt 72.0pt;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=EN-GB link="#0563C1" vlink="#954F72">

<div class=WordSection1>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><b><span
style='font-size:20.0pt;line-height:107%'>Code review checklist</span></b></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
style='font-size:16.0pt;line-height:107%'>In every human activity, we are bound
to make mistakes. Coding is no exception, so prudent teams use collaboration environments
to enable mutual checking of work. This can improve the quality of team output,
might help with new joiner induction/familiarisation and (done well, employing
metrics) can facilitate collective learning.</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
style='font-size:16.0pt;line-height:107%'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
style='font-size:16.0pt;line-height:107%'>Still, peer code review poorly done risks
stealing time and adversely impacting outcomes. Further, “<i>Techniques that
provide the benefits of peer code review while mitigating the pitfalls and
managing developers’ time are competitive advantages that no one wants to
reveal</i>” (SmartBear, see below), hence many on-line guides offer only banal
advice.</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
style='font-size:16.0pt;line-height:107%'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
style='font-size:16.0pt;line-height:107%'><a
href="https://static1.smartbear.co/smartbear/media/pdfs/best-kept-secrets-of-peer-code-review_redirected.pdf">SmartBear
Software (2006)</a> and <a
href="https://pdfs.semanticscholar.org/cf05/eae2a2a4f635034df3d221fbde2ef9607ebf.pdf?_ga=2.173865185.391208770.1586417920-1499581247.1586417920">Yang-Ming
Zhu (2016)</a> both provide comprehensive overview of software reading &amp;
review techniques. These include ad hoc approaches, semi-structured checklists
(the most recommended method), tightly structured, procedure-based methods and differential
reading – diff tool comparisons with pre-change code sections. In general
terms, Zhu notes: “<i>The effectiveness of the ad hoc reading is entirely up to
the individual reader (and) can vary by a factor of 10 in terms of defects
found per unit time</i>”. Increasing formality beneficially improves
consistency and focusses reviewers’ attention, but risks blinkered results,
with non-classified errors being overlooked.</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
style='font-size:16.0pt;line-height:107%'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
style='font-size:16.0pt;line-height:107%'><a
href="https://books.google.co.uk/books?id=MTCIDQAAQBAJ&amp;pg=PA117&amp;lpg=PA117&amp;dq=dunsmore+roper+wood+object&amp;source=bl&amp;ots=Zeol5fKOVp&amp;sig=ACfU3U2c2kkMfntYW26qK2Z02xCH3rrQrw&amp;hl=en&amp;sa=X&amp;ved=2ahUKEwichZG55droAhV1SBUIHW6sA_sQ6AEwA3oECAsQKQ#v=onepage&amp;q=dunsmore%20roper%20wood%20object&amp;f=false">Dunsmore
et al. (2000)</a> worked with 47 reviewers &amp; showed that <u>working from a
checklist improved defect discovery up to 30%, plus was faster</u> than ad hoc
or use-case approaches. This is esp. true of <b>omissions</b>, things that are missing,
notoriously hard to spot without a checklist. To perform a checklist-driven
review, evidence suggests the optimal approach is to scan the entire work
product repeatedly, with successive scans searching against each individual checklist
item. This same study also showed a consistent plateauing of defect detection
after sixty minutes review time. <i>Don’t review for more than 1 hour!</i> </span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
style='font-size:16.0pt;line-height:107%'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
style='font-size:16.0pt;line-height:107%'><a
href="https://www.researchgate.net/publication/220811084_Analyzing_individual_performance_of_source_code_review_using_reviewers'_eye_movement">Uwano
et al. (2006)</a> analysed eye movements during C code review. Not
surprisingly, they found that, to prevent constant back &amp; forth scrolling, local
variable declarations should be visible on the same screen as code that uses
them, so justifying function length guidelines. Similarly, <a
href="https://tobiasbaum.github.io/rp/optimalordering.pdf">Baum et al.</a> – characterising
code reviewers and their review tools as “<i>a joint cognitive system… helping
reviewers by reducing cognitive load</i>” – conclude that review tools should
group related change parts close together, ideally ordered so that information
is provided before it’s needed.</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
style='font-size:16.0pt;line-height:107%'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
style='font-size:16.0pt;line-height:107%'><a
href="https://books.google.co.uk/books?id=MTCIDQAAQBAJ&amp;pg=PA67&amp;lpg=PA67&amp;dq=Laitenberger+(1999)+review&amp;source=bl&amp;ots=Zeol5fJRYv&amp;sig=ACfU3U0tVAH29W74dR2K0DB6gg6_NQa6vg&amp;hl=en&amp;sa=X&amp;ved=2ahUKEwinyL384troAhUERxUIHdjVDgsQ6AEwAnoECAsQKQ#v=onepage&amp;q=Laitenberger%20(1999)%20review&amp;f=false">Laitenberger
(1999)</a> proved that reading time is twice as influential as code size (ie.
reviewing <u>more</u> code will not find more defects than reviewing more
carefully): “<i>Ultimately the most influential variable that you can control
is inspection time. That’s the knob you turn when you want to find more defects</i>.”</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
style='font-size:16.0pt;line-height:107%'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
style='font-size:16.0pt;line-height:107%'>In May of 2006, whilst marketing
their “Collaborator” product, SmartBear Software published <a
href="https://static1.smartbear.co/smartbear/media/pdfs/best-kept-secrets-of-peer-code-review_redirected.pdf">a
10-month case study</a> of peer code review at Cisco Systems. With 2500 reviews
of 3.2 million lines of code from a group of 50 developers, this was a
meaningful investigation. Reviews found on average 32 defects per 1000 lines of
code. 61% of the reviews uncovered no defects; of the others, defect density
ranged evenly between 10 and 130 defects per kLoC. All reviews of less than 200
LoC produced a relatively high rate of defects, often several times the
average. Above 200 LoC results trailed-off considerably; no review larger than
250 lines produced more than 37 defects per 1000 lines of code.</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
style='font-size:16.0pt;line-height:107%'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
style='font-size:16.0pt;line-height:107%'>An interesting SmartBear finding
concerns “author preparation”, where coders add comments/annotations intended
to guide reviewers through changes “<i>showing which files to look at first and
defending the reason and methods behind each code modification</i>”. The theory
is that because the author/modifier has to re-think all the changes during their
annotation process, they themselves uncover most of the defects before the
review even begins. Results supported this hypothesis: for all reviews with at
least one author preparation comment, defect density was mostly zero (wow!) and
never over 30/kLoC. The authors conclude: “<i>the best advice we can give is to
review between 100 and 300 lines of code at a time and spend 30- 60 minutes to
review it. Smaller changes can take less time, but always spend at least 5 minutes,
even on a single line of code</i>”.</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
style='font-size:16.0pt;line-height:107%'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
style='font-size:16.0pt;line-height:107%'>SmartBear also give consideration to the
psychology of code reviews, to review metrics and to “<i>what questions should teams
be asking?</i>”. These include:</span></p>

<p class=MsoListParagraphCxSpFirst style='margin-bottom:0cm;margin-bottom:.0001pt;
text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%;font-family:
Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:16.0pt;line-height:107%'>What are the
goals of the review? Are these goals measurable? Can a dollar-value be
attached?</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%;
font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:16.0pt;line-height:107%'>How will the team
checklist be enhanced?</span></p>

<p class=MsoListParagraphCxSpLast style='margin-bottom:0cm;margin-bottom:.0001pt;
text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%;font-family:
Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:16.0pt;line-height:107%'>How will metrics
“tweak” the review process &amp; ongoing impact of reviews on development?</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
style='font-size:16.0pt;line-height:107%'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
style='font-size:16.0pt;line-height:107%'>Enough general research. Accepting
that guidelines are a good thing, esp. for less experienced team members, the
following are intended as initial templates, to be enriched over time by team
experience…</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
style='font-size:16.0pt;line-height:107%'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><b><span
style='font-size:16.0pt;line-height:107%'>Pre-Review Checklist</span></b><span
style='font-size:16.0pt;line-height:107%'> (Sample – for augmenting by team)</span></p>

<p class=MsoListParagraphCxSpFirst style='margin-bottom:0cm;margin-bottom:.0001pt;
text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:16.0pt;line-height:107%'>Does JIRA task spec contain
requirements against which code can be tested? If not, why not?</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:16.0pt;line-height:107%'>Has ESLint error detection been run
across code changes &amp; issues resolved? <i>$ npm run validate</i></span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:16.0pt;line-height:107%'>Has unit test suite been run across
code changes &amp; issues resolved? <i>$ npm run test:client</i></span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:16.0pt;line-height:107%'>If required, are guiding comments provided
for reviewer, plus code changes explained with particular reference to JIRA
ticket work specification?</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:16.0pt;line-height:107%'>Are all new subroutines/methods
commented; clarifying purpose, plus annotated with correctly ordered parameter &amp;
return descriptions?</span></p>

<p class=MsoListParagraphCxSpLast style='margin-bottom:0cm;margin-bottom:.0001pt;
text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:16.0pt;line-height:107%'>Have changes to shared libraries been
updated to all environments?</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
style='font-size:16.0pt;line-height:107%'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><b><span
style='font-size:16.0pt;line-height:107%'>Sample Review Checklist Items</span></b><span
style='font-size:16.0pt;line-height:107%'> </span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
style='font-size:16.0pt;line-height:107%'>(Sample – for augmenting by team, but
note: (1) Zhu (2016) recommends checklists should never exceed a single page in
length, for ease of reference; (2) research above indicates optimal approach is
to scan the entire work product repeatedly, with successive scans searching
against each individual checklist item; (3) reviewer concentration always
lapses after 1 hour).</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
style='font-size:16.0pt;line-height:107%'> </span></p>

<p class=MsoListParagraphCxSpFirst style='margin-bottom:0cm;margin-bottom:.0001pt;
text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:16.0pt;line-height:107%'>An initial question when reviewing
JavaScript must be “<i>what in-house options for </i><a
href="https://eslint.org/docs/rules/"><i>ESLint rules</i></a><i> are applied?
What errors etc. will NOT be auto-detected? </i>”</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt'><span style='font-size:16.0pt;line-height:107%'>&nbsp;</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt'><b><span style='font-size:16.0pt;line-height:107%'>Documentation</span></b></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:16.0pt;line-height:107%'>Is code adequately ‘self-documenting’,
with meaningful method names etc?</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:16.0pt;line-height:107%'>Are comments updated and consistent
with the code? </span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:16.0pt;line-height:107%'>Are all new subroutines/methods
commented; clarifying purpose, plus annotated with correctly ordered parameter &amp;
return descriptions? </span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:16.0pt;line-height:107%'>Are corner-cases &amp; extremes
considered and described? </span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:16.0pt;line-height:107%'>Are complex algorithms explained and
justified? </span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>7.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:16.0pt;line-height:107%'>Is code that depends on non-obvious
behaviour in external libraries documented with reference to external
documentation?</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>8.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:16.0pt;line-height:107%'>Are units of measurement documented
for numeric values?</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>9.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:16.0pt;line-height:107%'>If allowed by team, is incomplete
code distinguished (e.g. “@TODO…”) and a continuation comment provided?</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>10.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:16.0pt;line-height:107%'>Is user-facing
documentation updated (online help, context help, tool-tips, version history)?</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>11.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:16.0pt;line-height:107%'>Overall, is there
clarity of purpose? Could the code be readily be further extended by another
team member?</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt'><span style='font-size:16.0pt;line-height:107%'>&nbsp;</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt'><b><span style='font-size:16.0pt;line-height:107%'>Testing </span></b></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>12.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:16.0pt;line-height:107%'>Have unit tests been
added/augmented for new code paths or behaviours?</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>13.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:16.0pt;line-height:107%'>Do unit tests
cover necessary errors and invalid parameter cases? </span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>14.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:16.0pt;line-height:107%'>Do unit tests
demonstrate algorithm performs as documented? </span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>15.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:16.0pt;line-height:107%'>Are possible null
values checked before use?</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>16.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:16.0pt;line-height:107%'>Do array indexes
check for out-of-bound errors?</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>17.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:16.0pt;line-height:107%'>Does new code inadvertently
replicate existing, that is already tested?</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>18.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:16.0pt;line-height:107%'>Does new code fulfil
requirements &amp; fix/implement the issue in question?</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>19.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:16.0pt;line-height:107%'>Testing: Is the
code scalable? </span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt'><span style='font-size:16.0pt;line-height:107%'>&nbsp;</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt'><b><span style='font-size:16.0pt;line-height:107%'>Error Handling</span></b></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>20.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:16.0pt;line-height:107%'>Are invalid
parameter values early-on handled properly?</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>21.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:16.0pt;line-height:107%'>Are error/null
values checked &amp; handled?</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>22.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:16.0pt;line-height:107%'>Do error handlers
clean up state and close resources?</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt'><span style='font-size:16.0pt;line-height:107%'>&nbsp;</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt'><b><span style='font-size:16.0pt;line-height:107%'>Performance</span></b></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>23.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:16.0pt;line-height:107%'>Can the branch be
pulled-down, built &amp; successfully run?</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>24.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:16.0pt;line-height:107%'>Do any required asynchronous
JS promises respond consistently?</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>25.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:16.0pt;line-height:107%'>Does browser caching
behave consistently?</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-bottom:0cm;margin-bottom:
.0001pt;text-indent:-18.0pt'><span style='font-size:16.0pt;line-height:107%'>26.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:16.0pt;line-height:107%'>Will code changes
scale adequately during ‘real-world’ use?</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-top:0cm;margin-right:0cm;
margin-bottom:0cm;margin-left:54.0pt;margin-bottom:.0001pt;text-indent:-18.0pt'><span
style='font-size:16.0pt;line-height:107%;font-family:Wingdings'>ð<span
style='font:7.0pt "Times New Roman"'> </span></span><span style='font-size:
16.0pt;line-height:107%'>Are objects duplicated only when necessary? Data
unnecessarily copied, saved, or reloaded?</span></p>

<p class=MsoListParagraphCxSpLast style='margin-top:0cm;margin-right:0cm;
margin-bottom:0cm;margin-left:54.0pt;margin-bottom:.0001pt;text-indent:-18.0pt'><span
style='font-size:16.0pt;line-height:107%;font-family:Wingdings'>ð<span
style='font:7.0pt "Times New Roman"'> </span></span><span style='font-size:
16.0pt;line-height:107%'>Do thread pools have reuse enabled and restricted
size?</span></p>

<p class=MsoNormal><span style='font-size:16.0pt;line-height:107%'>&nbsp;</span></p>

</div>

</body>

</html>
